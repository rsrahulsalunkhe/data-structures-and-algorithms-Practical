Name : Rahul Suryakant Salunkhe
Class : MCA sem - II
Roll No. : 55
                                                                              
Program : Implementation of programs based on Arrays.
                                                                               
#include<iostream>
using namespace std;

void addElement(int arr[], int &size)
{
    int item;
    cout << "Enter an element to be added: ";
    cin >> item;

    arr[size] = item;
    size++;
}

void deleteElement(int arr[], int& size)
{
    int pos;
    cout << "Enter the position of the element to delete (0-" << size - 1 << "): ";
    cin >> pos;

    if (pos < 0 || pos >= size)
    {
        cout << "Invalid position." << endl;
        return;
    }

    for (int i = pos; i < size - 1; i++)
    {
        arr[i] = arr[i + 1];
    }

    size--;
    cout << "Element deleted successfully." << endl;
}

void updateElement(int arr[], int& size)
{
    int pos;
    cout << "Enter the position of the element to update (0-" << size - 1 << "): ";
    cin >> pos;

    if (pos < 0 || pos >= size)
    {
        cout << "Invalid position." << endl;
        return;
    }

    int newValue;
    cout << "Enter the new value: ";
    cin >> newValue;

    arr[pos] = newValue;
    cout << "Element updated successfully." << endl;
}

void displayElement(int arr[], int& size)
{
    if (size == 0)
    {
        cout << "The array is empty." << endl;
        return;
    }

    cout << "Array elements: ";
    for (int i = 0; i < size; i++)
    {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main()
{
    const int MAX_SIZE = 10;
    int arr[MAX_SIZE];
    int size = 0;

    int ch;
    do
    {
        cout << "List of operations" << endl;
        cout << "1. Add element 2. Delete element 3. Update element 4. Display 5. Exit" << endl;

        cout << "Enter your choice: ";
        cin >> ch;

        switch (ch)
        {
        case 1:
            if (size >= MAX_SIZE)
            {
                cout << "The array is full." << endl;
            }
            else
            {
                addElement(arr, size);
            }
            break;
        case 2:
            if (size == 0)
            {
                cout << "The array is empty." << endl;
            }
            else
            {
                deleteElement(arr, size);
            }
            break;
        case 3:
            if (size == 0)
            {
                cout << "The array is empty." << endl;
            }
            else
            {
                updateElement(arr, size);
            }
            break;
        case 4:
            displayElement(arr, size);
            break;
        case 5:
            cout << "Exiting..." << endl;
            break;
        default:
            cout << "Invalid choice." << endl;
            break;
        }
    } while (ch != 5);

    return 0;
}
                                                                              
Output :
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 1
Enter an element to be added: 20
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 1
Enter an element to be added: 10
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 1
Enter an element to be added: 30
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 4
Array elements: 20 10 30
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 3
Enter the position of the element to update (0-2): 1
Enter the new value: 50
Element updated successfully.
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 2
Enter the position of the element to delete (0-2): 2
Element deleted successfully.
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 4
Array elements: 20 50
List of operations
1. Add element 2. Delete element 3. Update element 4. Display 5. Exit
Enter your choice: 5
Exiting...